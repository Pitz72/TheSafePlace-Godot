===============================================================================
                    THE SAFE PLACE - GDR TESTUALE ANNI 80
                       REGOLE DI SVILUPPO FONDAMENTALI
                      "The Polished Inspector" - v0.2.1
                           Aggiornato: 2025-01-28
===============================================================================

üéØ VERSIONE CORRENTE: v0.2.1 "The Polished Inspector"
üìä PROGRESSO: 93% (Milestone 2 completata definitivamente)

===============================================================================
üìã PROTOCOLLO DI SVILUPPO UMANO-LLM
===============================================================================

PRINCIPIO 1: DOCUMENTAZIONE COME FONTE UNICA DI VERIT√Ä
‚Ä¢ Cartella "01 Pre Produzione" √® l'UNICA fonte di verit√†
‚Ä¢ LLM non deve MAI fare supposizioni su features o architettura
‚Ä¢ Sempre consultare documenti esistenti prima di implementare
‚Ä¢ Mai ignorare o sovrascrivere decisioni architetturali documentate

PRINCIPIO 2: SVILUPPO INCREMENTALE ATOMICO
‚Ä¢ Ogni task deve essere il pi√π piccolo possibile
‚Ä¢ Un task = un commit GitHub con messaggio descrittivo
‚Ä¢ Mai mescolare features multiple in un singolo task
‚Ä¢ Testing completo prima di passare al task successivo

PRINCIPIO 3: RITUALE DEL RESET (Inizio Sessione)
‚Ä¢ Step 1: Inizializzazione obiettivo sessione
‚Ä¢ Step 2: Caricamento completo contesto documentazione
‚Ä¢ Step 3: Conferma LLM di comprensione obiettivo
‚Ä¢ Step 4: Identificazione task atomico da completare
‚Ä¢ Mai iniziare sviluppo senza questo rituale

PRINCIPIO 4: PROTOCOLLO ANTI-REGRESSIONE
‚Ä¢ File TESTS.md deve essere aggiornato per ogni feature
‚Ä¢ Test manuali definiti e descritti dettagliatamente
‚Ä¢ Verifiche obbligatorie prima di ogni commit
‚Ä¢ Zero regressioni tollerate su features esistenti

PRINCIPIO 5: RUOLI UMANO-LLM DEFINITI
‚Ä¢ UMANO: Project Manager, Architetto, Game Designer, QA Tester
‚Ä¢ LLM: Programmatore, Technical Writer, Pair Programmer
‚Ä¢ LLM segue decisioni architetturali umane senza questionare
‚Ä¢ Umano fornisce feedback e direzione, LLM implementa

PRINCIPIO 6: ARCHITETTURA MODULARE DATABASE
‚Ä¢ Database JSON modulari (file < 10KB ciascuno)
‚Ä¢ Organizzazione per cartelle logiche (data/items/, data/enemies/, etc.)
‚Ä¢ Suddivisione per categoria funzionale
‚Ä¢ File condivisi in data/system/ per sistemi comuni
‚Ä¢ Naming convention: categoria_tipologia.json
‚Ä¢ Applicazione OBBLIGATORIA a tutti database futuri

PRINCIPIO 7: AGGIORNAMENTO DOCUMENTAZIONE OBBLIGATORIO
‚Ä¢ "01 PRE PRODUZIONE\01 ROADMAP.txt" SEMPRE aggiornato
‚Ä¢ TUTTI i documenti roadmap aggiornati simultaneamente
‚Ä¢ Coerenza versioning tra tutti i documenti
‚Ä¢ Verifica incrociata prima chiusura ogni task
‚Ä¢ MAI ignorare aggiornamento cartelle "01 PRE PRODUZIONE" e "02 PRODUZIONE"
‚Ä¢ Sempre chiedere chiarimenti se mancano info in documentazione

PRINCIPIO 8: DESIGN KEYBOARD-ONLY RIGOROSO
‚Ä¢ Interfacce navigabili SOLO da tastiera (autenticit√† anni 80)
‚Ä¢ Nessun elemento richiede mouse per accesso completo
‚Ä¢ Input mapping completo: WASD + Frecce per movimento
‚Ä¢ Hotkey numerici 1-9 per azioni rapide
‚Ä¢ Modalit√† testuali con comandi ASCII ([I] [ESC] [ENTER])
‚Ä¢ UI design che ricorda terminali reali anni '80

===============================================================================
üéÆ STANDARD ARCHITETTURALI CONSOLIDATI v0.2.1
===============================================================================

ARCHITETTURA SINGLETON MANAGER:
‚Ä¢ ThemeManager: Gestione temi CRT e font DOS
‚Ä¢ DataManager: Database JSON modulari unificati + sistema rarit√†
‚Ä¢ PlayerManager: Stato giocatore completo + inventario + segnali reattivi
‚Ä¢ InputManager: Stati input centralizzati (MAP, INVENTORY, POPUP, DIALOGUE, COMBAT)

ARCHITETTURA UI REATTIVA:
‚Ä¢ GameUI.tscn: Layout 3-colonne (1:2:1) con 13 pannelli specializzati
‚Ä¢ Aggiornamenti automatici via segnali PlayerManager
‚Ä¢ SubViewport per World.tscn integrato nel pannello centrale
‚Ä¢ Sistema diario BBCode con timestamp per azioni giocatore

SISTEMA INVENTARIO AVANZATO:
‚Ä¢ Navigazione WASD + Frecce indistintamente
‚Ä¢ Evidenziazione visuale con > [1] [2] [3] format
‚Ä¢ Consumo reale tramite PlayerManager.use_item()
‚Ä¢ Hotkey diretti 1-9 con applicazione effetti immediata
‚Ä¢ Modalit√† attiva/inattiva con comandi dinamici contestuali
‚Ä¢ Sistema porzioni per oggetti consumabili (es. 2/3 porzioni acqua)

SISTEMA POPUP AVANZATO:
‚Ä¢ Popup modale (CanvasLayer) per interazione oggetti dettagliata
‚Ä¢ Layout professionale con griglia 2-colonne per statistiche e sfondo opaco
‚Ä¢ Azioni contestuali (RichTextLabel navigabili) basate sul tipo di oggetto
‚Ä¢ Navigazione 100% Keyboard-Only con indicatore evidenziazione negativa
‚Ä¢ Localizzazione completa: tipi oggetto e rarit√† in italiano
‚Ä¢ Integrazione InputManager per gestione stati POPUP vs MAP/INVENTORY

FORMATO DATI STANDARDIZZATO:
‚Ä¢ JSON con effects array: [{"type": "heal", "amount": 25}]
‚Ä¢ Tipologie effetti: heal, nourish, hydrate, restore_stamina
‚Ä¢ Gestione placeholder per features future (radiazioni, veleni)
‚Ä¢ Oggetti non consumabili gestiti separatamente
‚Ä¢ Sistema rarit√† centralizzato con nomi localizzati

===============================================================================
üõ†Ô∏è STRUMENTI E WORKFLOW CONSOLIDATI
===============================================================================

AMBIENTE SVILUPPO:
‚Ä¢ Engine: Godot 4.4.1 stable
‚Ä¢ Font Standard: Perfect DOS VGA 437 Win
‚Ä¢ Tema CRT: Shader terminale anni 80 con scanlines
‚Ä¢ Performance Target: 60+ FPS stabili

GESTIONE VERSIONING:
‚Ä¢ Formato: v0.X.Y "Nome Milestone/Feature"
‚Ä¢ Commit atomici con messaggi descrittivi
‚Ä¢ Branch principale: godot-port
‚Ä¢ Tag per release major milestone

QUALITY ASSURANCE:
‚Ä¢ Test anti-regressione: 47/47 attualmente (100% pass rate)
‚Ä¢ Verifica manuale features prima commit
‚Ä¢ Performance monitoring continuo
‚Ä¢ Documentazione aggiornata obbligatoria

===============================================================================
üìä ACHIEVEMENT E MILESTONE COMPLETATE
===============================================================================

‚úÖ MILESTONE 0: FONDAMENTA TECNICHE (100%)
‚Ä¢ "Foundation Builder" - Setup Godot + CRT perfetto

‚úÖ MILESTONE 1: MONDO DI GIOCO (100%)
‚Ä¢ "World Builder" - Mondo ASCII 250x250 navigabile

‚úÖ MILESTONE 2: GAMEPLAY CORE COMPLETATA DEFINITIVAMENTE (100% - 11/11 task)
‚Ä¢ "The Manager" - PlayerManager singleton completo
‚Ä¢ "The UI Master" - GameUI reattiva 3-colonne
‚Ä¢ "The Inventory Master" - Sistema inventario WASD + consumo
‚Ä¢ "The Perfect Engine" - Camera smooth + performance AAA
‚Ä¢ "The Balanced World" - Mappa ottimizzata con rifugi
‚Ä¢ "The Polished Inspector" - Popup localizzato professionale

üéØ PROSSIMO OBIETTIVO: M3.T1 Sistema Combattimento Base

===============================================================================
‚ö†Ô∏è REGOLE SPECIALI GODOT 4.4.1
===============================================================================

GESTIONE PERCORSI:
‚Ä¢ Mai usare path assoluti Windows in scene/script
‚Ä¢ Sempre res:// per riferimenti interni
‚Ä¢ Pulizia cache .godot/ in caso corruzione UID
‚Ä¢ Rimozione file .uid corrotti se necessario

PERFORMANCE TILEMAP:
‚Ä¢ TileSet ottimizzato per mappe 250x250 (62.500 tiles)
‚Ä¢ Texture generate programmaticamente per coerenza
‚Ä¢ Camera limits configurati per contenimento

SISTEMA AUTOLOAD:
‚Ä¢ Caricamento ordinato: Theme ‚Üí Data ‚Üí Player
‚Ä¢ Gestione dipendenze cross-manager
‚Ä¢ Inizializzazione pulita con logging dettagliato

===============================================================================
üéØ OBIETTIVI SESIONI FUTURE
===============================================================================

BREVE TERMINE (M2.T4):
‚Ä¢ Sistema combattimento base con turni
‚Ä¢ Calcolo danni armi/armature da inventario
‚Ä¢ Stati alterati base (veleno, infezione)

MEDIO TERMINE (M3):
‚Ä¢ Eventi casuali con database modulare
‚Ä¢ Sistema dialoghi NPG semplificato
‚Ä¢ Crafting base con recipe JSON

LUNGO TERMINE (M4):.
‚Ä¢ Database contenuti completo
‚Ä¢ Sistema progressione personaggio
‚Ä¢ Audio integration e release

===============================================================================

üéÆ The Safe Place v0.2.1 "The Polished Inspector"
üì¶ Sistema inventario avanzato con popup professionale completato

Documentazione aggiornata: 2025-01-28
Prossima milestone: M3.T1 Sistema Combattimento Base

===============================================================================
